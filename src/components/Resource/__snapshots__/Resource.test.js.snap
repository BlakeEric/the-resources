// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Resource renders correctly not toggled 1`] = `
<tr
  style={
    Object {
      "overflow": "visible",
    }
  }
>
  <td>
    <div
      className="resourceDetails-wrapper"
      css={
        Object {
          "map": undefined,
          "name": "lr1hv8",
          "next": undefined,
          "styles": "
  position: relative;
  .resourceDetails {
    position: absolute;
    left: 0;
    max-width: 90vw;
    width: 300px;
    top: 110%;
    left: -0.4025rem;
    background: white;
    border-radius: 5px;
    box-shadow: 2px 2px 12px 1px rgba(0,0,0,0.25);
    padding: 0.4025rem;
    z-index: 1000;
    border: 1px solid #e4e4e4;
    &:after {
      content: \\"\\";
      height: 12px;
      width: 12px;
      position: absolute;
      top: 0;
      background: white;
      transform: rotate(-45deg);
      transform-origin: 0 0;
      left: 0.805rem;
      border-right: 1px solid #e4e4e4;
      border-top: 1px solid #e4e4e4;
    }
    &.up {
      top: auto;
      bottom: 110%;
      &:after {
        top: auto;
        bottom: 0;
        transform: rotate(45deg);
        transform-origin: 0 100%;
        border-right: 1px solid #e4e4e4;
        border-bottom: 1px solid #e4e4e4;
        border-top: 0;
      }
    }
    h4 {
      margin-bottom: 0.4025rem;
    }
    p {
      color: black;
    }
    p:last-child {
      margin: 0;
    }
  }
",
          "toString": [Function],
        }
      }
    >
      <a
        onClick={[Function]}
        rel="noreferrer noopener"
        target="_blank"
      >
        Alligator
      </a>
    </div>
  </td>
  <td>
    Article
  </td>
  <td>
    Front-end
  </td>
  <td>
    All
  </td>
</tr>
`;

exports[`Resource renders correctly when toggled 1`] = `
<tr
  style={
    Object {
      "overflow": "visible",
    }
  }
>
  <td>
    <div
      className="resourceDetails-wrapper"
      css={
        Object {
          "map": undefined,
          "name": "lr1hv8",
          "next": undefined,
          "styles": "
  position: relative;
  .resourceDetails {
    position: absolute;
    left: 0;
    max-width: 90vw;
    width: 300px;
    top: 110%;
    left: -0.4025rem;
    background: white;
    border-radius: 5px;
    box-shadow: 2px 2px 12px 1px rgba(0,0,0,0.25);
    padding: 0.4025rem;
    z-index: 1000;
    border: 1px solid #e4e4e4;
    &:after {
      content: \\"\\";
      height: 12px;
      width: 12px;
      position: absolute;
      top: 0;
      background: white;
      transform: rotate(-45deg);
      transform-origin: 0 0;
      left: 0.805rem;
      border-right: 1px solid #e4e4e4;
      border-top: 1px solid #e4e4e4;
    }
    &.up {
      top: auto;
      bottom: 110%;
      &:after {
        top: auto;
        bottom: 0;
        transform: rotate(45deg);
        transform-origin: 0 100%;
        border-right: 1px solid #e4e4e4;
        border-bottom: 1px solid #e4e4e4;
        border-top: 0;
      }
    }
    h4 {
      margin-bottom: 0.4025rem;
    }
    p {
      color: black;
    }
    p:last-child {
      margin: 0;
    }
  }
",
          "toString": [Function],
        }
      }
    >
      <a
        onClick={[Function]}
        rel="noreferrer noopener"
        target="_blank"
      >
        Alligator
      </a>
      <aside
        className="resourceDetails "
      >
        <h4>
          Alligator
        </h4>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": undefined,
            }
          }
        />
        <a
          rel="noreferrer noopener"
          target="_blank"
        >
          View Now
        </a>
      </aside>
    </div>
  </td>
  <td>
    Article
  </td>
  <td>
    Front-end
  </td>
  <td>
    All
  </td>
</tr>
`;

exports[`Resource renders correctly when toggled 2`] = `
<tr
  style={
    Object {
      "overflow": "visible",
    }
  }
>
  <td>
    <div
      className="resourceDetails-wrapper"
      css={
        Object {
          "map": undefined,
          "name": "lr1hv8",
          "next": undefined,
          "styles": "
  position: relative;
  .resourceDetails {
    position: absolute;
    left: 0;
    max-width: 90vw;
    width: 300px;
    top: 110%;
    left: -0.4025rem;
    background: white;
    border-radius: 5px;
    box-shadow: 2px 2px 12px 1px rgba(0,0,0,0.25);
    padding: 0.4025rem;
    z-index: 1000;
    border: 1px solid #e4e4e4;
    &:after {
      content: \\"\\";
      height: 12px;
      width: 12px;
      position: absolute;
      top: 0;
      background: white;
      transform: rotate(-45deg);
      transform-origin: 0 0;
      left: 0.805rem;
      border-right: 1px solid #e4e4e4;
      border-top: 1px solid #e4e4e4;
    }
    &.up {
      top: auto;
      bottom: 110%;
      &:after {
        top: auto;
        bottom: 0;
        transform: rotate(45deg);
        transform-origin: 0 100%;
        border-right: 1px solid #e4e4e4;
        border-bottom: 1px solid #e4e4e4;
        border-top: 0;
      }
    }
    h4 {
      margin-bottom: 0.4025rem;
    }
    p {
      color: black;
    }
    p:last-child {
      margin: 0;
    }
  }
",
          "toString": [Function],
        }
      }
    >
      <a
        onClick={[Function]}
        rel="noreferrer noopener"
        target="_blank"
      >
        Alligator
      </a>
      <aside
        className="resourceDetails "
      >
        <h4>
          Alligator
        </h4>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": undefined,
            }
          }
        />
        <a
          rel="noreferrer noopener"
          target="_blank"
        >
          View Now
        </a>
      </aside>
    </div>
  </td>
  <td>
    Article
  </td>
  <td>
    Front-end
  </td>
  <td>
    All
  </td>
</tr>
`;

exports[`Resource renders popover above item when showDetailsAbove prop is true 1`] = `
<tr
  style={
    Object {
      "overflow": "visible",
    }
  }
>
  <td>
    <div
      className="resourceDetails-wrapper"
      css={
        Object {
          "map": undefined,
          "name": "lr1hv8",
          "next": undefined,
          "styles": "
  position: relative;
  .resourceDetails {
    position: absolute;
    left: 0;
    max-width: 90vw;
    width: 300px;
    top: 110%;
    left: -0.4025rem;
    background: white;
    border-radius: 5px;
    box-shadow: 2px 2px 12px 1px rgba(0,0,0,0.25);
    padding: 0.4025rem;
    z-index: 1000;
    border: 1px solid #e4e4e4;
    &:after {
      content: \\"\\";
      height: 12px;
      width: 12px;
      position: absolute;
      top: 0;
      background: white;
      transform: rotate(-45deg);
      transform-origin: 0 0;
      left: 0.805rem;
      border-right: 1px solid #e4e4e4;
      border-top: 1px solid #e4e4e4;
    }
    &.up {
      top: auto;
      bottom: 110%;
      &:after {
        top: auto;
        bottom: 0;
        transform: rotate(45deg);
        transform-origin: 0 100%;
        border-right: 1px solid #e4e4e4;
        border-bottom: 1px solid #e4e4e4;
        border-top: 0;
      }
    }
    h4 {
      margin-bottom: 0.4025rem;
    }
    p {
      color: black;
    }
    p:last-child {
      margin: 0;
    }
  }
",
          "toString": [Function],
        }
      }
    >
      <a
        onClick={[Function]}
        rel="noreferrer noopener"
        target="_blank"
      >
        Alligator
      </a>
      <aside
        className="resourceDetails up"
      >
        <h4>
          Alligator
        </h4>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": undefined,
            }
          }
        />
        <a
          rel="noreferrer noopener"
          target="_blank"
        >
          View Now
        </a>
      </aside>
    </div>
  </td>
  <td>
    Article
  </td>
  <td>
    Front-end
  </td>
  <td>
    All
  </td>
</tr>
`;
