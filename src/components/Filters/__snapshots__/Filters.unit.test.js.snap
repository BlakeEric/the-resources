// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filters Adds selected values to appropriate fields 1`] = `
<form
  css={
    Object {
      "map": undefined,
      "name": "olpobj",
      "next": undefined,
      "styles": "
  font-size: 0.8855rem;
  margin: auto -0.805rem;
  @media (min-width: 600px) {
    position: sticky;
    top: 0;
    z-index: 10000;
  }
  fieldset {
    color: white;
    border-radius: 5px;
    background-color: #6aa7fa;
    background-image: linear-gradient(to bottom right, #6aa7fa, #7b4caf);
    padding: 0.4025rem;
    border: none;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.05);
    legend {
      width: 100%;
      float: left;
      padding: 0 0.4025rem;
      font-size: 0.805rem;
      letter-spacing: 1px;
      line-height: 1.5;
      border-radius: 5px;
      text-transform: uppercase;
      button.btn-clearFilters {
        margin-left: 12px;
        display: inline;
        padding: 2px .25rem;
        background-color: #0acc9e;
        background-image: linear-gradient(to bottom right, #37e6bd, #0acc9e);
        border: 1px solid transparent;
        color: white;
        border-radius: 3px;
        font-size: 0.805rem;
        line-height: 1;
        &:hover, &:focus {
          border: 1px solid #048e6d;
        }
      }
    }
  }
  label {
    width: 50%;
    display: inline-block;
    padding: 0.4025rem;
    @media (min-width: 600px) {
      width: 25%;
    }
  }
  input, select {
    width: 100%;
    height: 30px;
    border-color: white;
    background: white;
    box-shadow: none;
    border-radius: 5px;
    padding-left: 5px;
    padding-right: 5px;
    border: 1.5px solid white;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.05);
  }
",
      "toString": [Function],
    }
  }
>
  <fieldset>
    <legend>
      Filter
      <button
        className="btn-clearFilters"
      >
        Ã— Clear All
      </button>
    </legend>
    <label
      htmlFor="searchTerm"
    >
      Name
      <input
        aria-label="Name"
        id="searchTerm"
        name="searchTerm"
        onChange={[Function]}
        placeholder="Start typing..."
        type="text"
        value="Code"
      />
    </label>
    <label
      htmlFor="resourceFormat"
    >
      Format
      <select
        id="resourceFormat"
        name="resourceFormat"
        onChange={[Function]}
        value="Article"
      >
        <option
          value=""
        >
          All
        </option>
        <option
          value="Article"
        >
          Article
        </option>
        <option
          value="Interactive"
        >
          Interactive
        </option>
        <option
          value="Tutorial"
        >
          Tutorial
        </option>
        <option
          value="Video"
        >
          Video
        </option>
      </select>
    </label>
    <label
      htmlFor="resourceFocus"
    >
      Focus
      <select
        id="resourceFocus"
        name="resourceFocus"
        onChange={[Function]}
        value="Front-end"
      >
        <option
          value=""
        >
          All
        </option>
        <option
          value="Front-end"
        >
          Front-end
        </option>
        <option
          value="Multiple"
        >
          Multiple
        </option>
        <option
          value="Algorithms"
        >
          Algorithms
        </option>
      </select>
    </label>
    <label
      htmlFor="resourceSkillLevel"
    >
      Skill Level
      <select
        id="resourceSkillLevel"
        name="resourceSkillLevel"
        onChange={[Function]}
        value="Beginner"
      >
        <option
          value=""
        >
          All
        </option>
        <option
          value="Beginner"
        >
          Beginner
        </option>
        <option
          value="Moderate"
        >
          Moderate
        </option>
        <option
          value="Advanced"
        >
          Advanced
        </option>
      </select>
    </label>
  </fieldset>
</form>
`;

exports[`Filters renders correctly 1`] = `
<form
  css={
    Object {
      "map": undefined,
      "name": "olpobj",
      "next": undefined,
      "styles": "
  font-size: 0.8855rem;
  margin: auto -0.805rem;
  @media (min-width: 600px) {
    position: sticky;
    top: 0;
    z-index: 10000;
  }
  fieldset {
    color: white;
    border-radius: 5px;
    background-color: #6aa7fa;
    background-image: linear-gradient(to bottom right, #6aa7fa, #7b4caf);
    padding: 0.4025rem;
    border: none;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.05);
    legend {
      width: 100%;
      float: left;
      padding: 0 0.4025rem;
      font-size: 0.805rem;
      letter-spacing: 1px;
      line-height: 1.5;
      border-radius: 5px;
      text-transform: uppercase;
      button.btn-clearFilters {
        margin-left: 12px;
        display: inline;
        padding: 2px .25rem;
        background-color: #0acc9e;
        background-image: linear-gradient(to bottom right, #37e6bd, #0acc9e);
        border: 1px solid transparent;
        color: white;
        border-radius: 3px;
        font-size: 0.805rem;
        line-height: 1;
        &:hover, &:focus {
          border: 1px solid #048e6d;
        }
      }
    }
  }
  label {
    width: 50%;
    display: inline-block;
    padding: 0.4025rem;
    @media (min-width: 600px) {
      width: 25%;
    }
  }
  input, select {
    width: 100%;
    height: 30px;
    border-color: white;
    background: white;
    box-shadow: none;
    border-radius: 5px;
    padding-left: 5px;
    padding-right: 5px;
    border: 1.5px solid white;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.05);
  }
",
      "toString": [Function],
    }
  }
>
  <fieldset>
    <legend>
      Filter
    </legend>
    <label
      htmlFor="searchTerm"
    >
      Name
      <input
        aria-label="Name"
        id="searchTerm"
        name="searchTerm"
        onChange={[Function]}
        placeholder="Start typing..."
        type="text"
        value=""
      />
    </label>
    <label
      htmlFor="resourceFormat"
    >
      Format
      <select
        id="resourceFormat"
        name="resourceFormat"
        onChange={[Function]}
        value=""
      >
        <option
          value=""
        >
          All
        </option>
        <option
          value="Article"
        >
          Article
        </option>
        <option
          value="Interactive"
        >
          Interactive
        </option>
        <option
          value="Tutorial"
        >
          Tutorial
        </option>
        <option
          value="Video"
        >
          Video
        </option>
      </select>
    </label>
    <label
      htmlFor="resourceFocus"
    >
      Focus
      <select
        id="resourceFocus"
        name="resourceFocus"
        onChange={[Function]}
        value=""
      >
        <option
          value=""
        >
          All
        </option>
        <option
          value="Front-end"
        >
          Front-end
        </option>
        <option
          value="Multiple"
        >
          Multiple
        </option>
        <option
          value="Algorithms"
        >
          Algorithms
        </option>
      </select>
    </label>
    <label
      htmlFor="resourceSkillLevel"
    >
      Skill Level
      <select
        id="resourceSkillLevel"
        name="resourceSkillLevel"
        onChange={[Function]}
        value=""
      >
        <option
          value=""
        >
          All
        </option>
        <option
          value="Beginner"
        >
          Beginner
        </option>
        <option
          value="Moderate"
        >
          Moderate
        </option>
        <option
          value="Advanced"
        >
          Advanced
        </option>
      </select>
    </label>
  </fieldset>
</form>
`;
